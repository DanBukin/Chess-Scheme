# -*- coding: utf-8 -*-
"""chess_scheme.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1f64rod3EfwvJHkQ6UyvndWZ1_rxtNBGP
"""

import matplotlib.pyplot as plt
from matplotlib.ticker import AutoMinorLocator
from matplotlib.ticker import FuncFormatter
import numpy as np

formatter = FuncFormatter(lambda x, _: f"{x:.0f}")

def print_scheme_itog(D,d):
  centers = []
  centers_1=[]
  centers_2=[]


  fig, ax = plt.subplots(figsize=(10, 10))
  circle_0 = plt.Circle((0,0), D/2, edgecolor='#D44B46', facecolor='#1A1A1A')
  ax.add_patch(circle_0)

  max_index = int((D/2) // d) + 1

  for i in range(-max_index, max_index + 1):
        for j in range(-max_index, max_index + 1):
            x = i * d
            y = j * d
            if np.sqrt(x ** 2 + y ** 2) + d/2 <= (D/2):
                centers.append((x, y))
  for (x, y) in centers:
        if (int((x / d) + (y / d)) % 2) == 0:
            color = 'white'
            color_1='#1A1A1A'
            centers_2.append((x, y))
        else:
            color = '#D44B46'
            color_1='#D44B46'
            centers_1.append((x, y))
        small_circle = plt.Circle((x, y), d/2, edgecolor=color, facecolor=color_1)
        ax.add_artist(small_circle)
  ax.set_aspect('equal', adjustable='box')
  ax.set_xlim(-D / 2 - d, D / 2 + d)
  ax.set_ylim(-D / 2 - d, D / 2 + d)
  ax.tick_params(axis='x', colors='white', labelsize=14)
  ax.tick_params(axis='y', colors='white', labelsize=14)
  ax.grid(True, color='#D44B46', linestyle='--', linewidth=0.1)
  ax.grid(which='major', color='gray', linestyle='--', linewidth=0.1)
  ax.grid(which='minor', color='gray', linestyle='--', linewidth=0.1)
  ax.xaxis.set_minor_locator(AutoMinorLocator())
  ax.yaxis.set_minor_locator(AutoMinorLocator())
  ax.title.set_color('white')
  fig.patch.set_facecolor('#1A1A1A')
  ax.set_facecolor('#1A1A1A')
  fig.subplots_adjust(left=0.07, bottom=0.05, right=0.98, top=0.98)
  ax.xaxis.set_major_formatter(formatter)
  ax.yaxis.set_major_formatter(formatter)
  ax.tick_params(axis='x', colors='white', labelsize=15)
  ax.tick_params(axis='y', colors='white', labelsize=15)
  plt.show()
  return centers_1,centers_2

centers_1,centers_2=print_scheme_itog(300,19)
print("RED")
for x,y in zip(centers_1,centers_2):
  print(f'{x}\t{y}')

